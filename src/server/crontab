# SERVER CRONTAB
# NOTE: Do not store environment variables in this file!
# They will be sent via email if a cron job fails which could expose sensitive creds
# Instead, place them in `~/.env-crontab` and source that file on
# cron jobs that require environment variables


# GLOBAL SETUP
PATH=/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
MAILTO=justinpaulhammond@gmail.com


# Alchemist
10 2 * * * alchemist --update > /dev/null
30 2 * * * alchemist --backup > /dev/null
45 2 * * * cp "$HOME/alchemist/backup/Brewfile" "$HOME/.dotfiles/src/server/Brewfile" > /dev/null

# Database Backups
0 3 * * * . "$HOME"/.env-crontab; srvinfra export_database_secure glass-glass-db-1 "$GLASS_DB_ROOT_PASSWORD" glass "$HOME/sqldumps/glass/glass_$(date +\%F_\%H-\%M-\%S).enc.gz" > /dev/null
1 3 * * * . "$HOME"/.env-crontab; srvinfra export_database_secure tuneapp-tuneapp-db-1 "$TUNEAPP_DB_ROOT_PASSWORD" tuneapp "$HOME/sqldumps/tuneapp/tuneapp_$(date +\%F_\%H-\%M-\%S).enc.gz" > /dev/null
# 2 3 * * * . "$HOME"/.env-crontab; srvinfra export_database_secure all-the-invites-alltheinvites-db-1 "$ALLTHEINVITES_DB_ROOT_PASSWORD" alltheinvites "$HOME/sqldumps/alltheinvites/alltheinvites_$(date +\%F_\%H-\%M-\%S).enc.gz" > /dev/null
3 3 * * * . "$HOME"/.env-crontab; srvinfra export_database_secure el-gozo-de-jesus-elgozodejesus-db-1 "$ELGOZODEJESUS_DB_ROOT_PASSWORD" elgozodejesus "$HOME/sqldumps/elgozodejesus/elgozodejesus_$(date +\%F_\%H-\%M-\%S).enc.gz" > /dev/null
4 3 * * * . "$HOME"/.env-crontab; srvinfra export_database_secure easypost-tools-ui-easypost-tools-db-1 "$EASYPOSTTOOLS_DB_ROOT_PASSWORD" easypost_tools "$HOME/sqldumps/easyposttools/easyposttools_$(date +\%F_\%H-\%M-\%S).enc.gz" > /dev/null
# Deep archive backups every 30 days, (must come before cleanup) - NEVER delete
# TODO: This is just dumping all backups to a single dir, break them up into their own dirs
10 3 1 * * find "$HOME"/sqldumps -maxdepth 2 -mindepth 2 -mtime +30 -exec cp '{}' /"$HOME"/sqldumps_deep/ \; >/dev/null
# Cleanup backups older than 30 days (must come last)
15 3 * * * find "$HOME"/sqldumps -maxdepth 2 -mindepth 2 -mtime +30 -delete >/dev/null

# Server Sync (requires SSH key to be present on Server1)
0 * * * * rsync -a --delete ~/harvey/ admin@Server1.local:~/harvey >/dev/null
30 3 * * * rsync -a --delete ~/sqldumps/ admin@Server1.local:~/sqldumps >/dev/null

# Docker
0 3 * * 0 docker system prune -f >/dev/null

# Healthchecks
*/5 * * * * cd ~/harvey/projects/justintime50/os-scripting && ./src/macos/healthchecks/docker-healthcheck.sh > /dev/null
*/5 * * * * cd ~/harvey/projects/justintime50/os-scripting && ./src/macos/healthchecks/harvey-healthcheck.sh > /dev/null

# Forks Sync
0 2 * * * . "$HOME"/.env-crontab; . "$HOME"/.keychain/${HOSTNAME}-sh; forks-sync --token "$GITHUB_TOKEN" --force > /dev/null

# GitHub Archive
0 1 * * * . "$HOME"/.env-crontab; . "$HOME"/.keychain/${HOSTNAME}-sh; github-archive --users justintime50 --orgs tuneuptechnology --gists justintime50 --clone --pull --forks --token "$GITHUB_TOKEN" > /dev/null

# Pullbug (Personal)
0 9 * * 1 . "$HOME"/.env-crontab; pullbug --pulls --issues --drafts --github_token "$GITHUB_TOKEN" --github_context users --github_owner Justintime50 --slack --slack_token "$PULLBUG_SLACK_BOT_TOKEN" --slack_channel "$PULLBUG_SLACK_CHANNEL" > /dev/null
# Pullbug (EasyPost)
0 9,12,15 * * 1-5 . "$HOME"/.env-crontab; pullbug --pulls --github_token "$GITHUB_TOKEN" --github_context orgs --github_owner EasyPost --slack --slack_token "$EASYPOST_PULLBUG_SLACK_BOT_TOKEN" --slack_channel "$EASYPOST_PULLBUG_SLACK_CHANNEL" --repos easypost-php,easypost-node,easypost-python,easypost-ruby,easypost-java,easypost-csharp,easypost-go,scotch > /dev/null

# Unifi Config Backups
0 4 * * 0 . "$HOME"/.keychain/${HOSTNAME}-sh; "$HOME"/git/personal/harvey/projects/justintime50/os-scripting/src/ubios/backups/download_config_backups.sh /Volumes/D1-HD2-Nextcloud/nextcloud-data/justinhammond/files/Unifi/backups > /dev/null
