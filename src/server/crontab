# SERVER CRONTAB
# NOTE: Do not store environment variables in this file!
# They will be sent via email if a cron job fails which could expose sensitive creds
# Instead, place them in `~/.env-crontab` and source that file on
# cron jobs that require environment variables


# GLOBAL SETUP
PATH=/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
MAILTO=justinpaulhammond@gmail.com


# Login commands
@reboot cronic ./login-commands.sh

# Alchemist (DO NOT use `--greedy` here since it will break Docker in prod)
10 2 * * * cronic alchemist --update
30 2 * * * cronic alchemist --backup --force
45 2 * * * cronic cp "$HOME/alchemist/backup/Brewfile" "$HOME/.dotfiles/src/server/Brewfile"

# Database Backups
0 3 * * * . "$HOME"/.env-crontab; SRVINFRA_DATABASE_EXECUTABLE="mariadb" cronic srvinfra export_database_secure easypost-tools-ui-easypost-tools-ui-db-1 "$EASYPOSTTOOLS_DB_ROOT_PASSWORD" easypost_tools "$HOME/sqldumps/easyposttools/easyposttools_$(date +\%F_\%H-\%M-\%S).enc.gz"
2 3 * * * . "$HOME"/.env-crontab; SRVINFRA_DATABASE_EXECUTABLE="mariadb" cronic srvinfra export_database_secure glass-glass-db-1 "$GLASS_DB_ROOT_PASSWORD" glass "$HOME/sqldumps/glass/glass_$(date +\%F_\%H-\%M-\%S).enc.gz"
3 3 * * * . "$HOME"/.env-crontab; SRVINFRA_DATABASE_EXECUTABLE="mariadb" cronic srvinfra export_database_secure jones-excavating-jones-excavating-db-1 "$JONESEXCAVATING_DB_ROOT_PASSWORD" jonesexcavating "$HOME/sqldumps/jonesexcavating/jonesexcavating_$(date +\%F_\%H-\%M-\%S).enc.gz"
4 3 * * * . "$HOME"/.env-crontab; SRVINFRA_DATABASE_EXECUTABLE="mariadb" cronic srvinfra export_database_secure callus-fabrication-callus-fabrication-db-1 "$CALLUSFABRICATION_DB_ROOT_PASSWORD" callusfabrication "$HOME/sqldumps/callusfabrication/callusfabrication_$(date +\%F_\%H-\%M-\%S).enc.gz"
5 3 * * * . "$HOME"/.env-crontab; SRVINFRA_DATABASE_EXECUTABLE="mariadb" cronic srvinfra export_database_secure golf-rocket-golf-rocket-db-1 "$GOLFROCKET_DB_ROOT_PASSWORD" golfrocket "$HOME/sqldumps/golfrocket/golfrocket_$(date +\%F_\%H-\%M-\%S).enc.gz"
# Deep archive backups every 30 days, (must come before cleanup) - NEVER delete
# TODO: This is just dumping all backups to a single dir, break them up into their own dirs
10 3 1 * * cronic find "$HOME"/sqldumps -maxdepth 2 -mindepth 2 -mtime +30 -exec cp '{}' /"$HOME"/sqldumps_deep/ \;
# Cleanup backups older than 30 days (must come last)
15 3 * * * cronic find "$HOME"/sqldumps -maxdepth 2 -mindepth 2 -mtime +30 -delete

# Docker
0 3 * * 0 cronic docker system prune -f

# Healthchecks
*/3 * * * * cd "$HOME"/harvey/projects/justintime50/os-scripting && cronic ./src/macos/healthchecks/docker-healthcheck.sh
*/10 * * * * cd "$HOME"/harvey/projects/justintime50/os-scripting && cronic ./src/macos/healthchecks/harvey-healthcheck.sh
*/10 * * * * cd "$HOME"/harvey/projects/justintime50/os-scripting && . "$HOME"/.env-crontab; UPTIME_ROBOT_API_KEY="$UPTIME_ROBOT_API_KEY" cronic venv/bin/python src/macos/healthchecks/docker_uptimerobot_healthcheck.py

# Forks Sync
# 0 2 * * * . "$HOME"/.env-crontab; . "$HOME"/.keychain/${HOSTNAME}-sh; cronic forks-sync --token "$GITHUB_TOKEN" --force

# GitHub Archive
0 1 * * * . "$HOME"/.env-crontab; . "$HOME"/.keychain/${HOSTNAME}-sh; cronic venv/github-archive/bin/github-archive --users justintime50 --orgs tuneuptechnology --gists justintime50 --clone --pull --forks --token "$GITHUB_TOKEN" --log_level warning

# Pullbug (Personal to Discord)
0 9 * * 1 . "$HOME"/.env-crontab; cronic venv/pullbug/bin/pullbug --pulls --issues --drafts --github_token "$GITHUB_TOKEN" --github_context users --github_owner Justintime50 --discord --discord_url "$PULLBUG_DISCORD_URL" --log_level warning

# Unifi Config Backups
0 4 * * * . "$HOME"/.env-crontab; UNIFI_USERNAME="$UNIFI_USERNAME" UNIFI_PASSWORD="$UNIFI_PASSWORD" UNIFI_BACKUP_LOCATION="$UNIFI_BACKUP_LOCATION" cronic venv/get_last_unifi_console_backup/bin/python "$HOME"/harvey/projects/justintime50/os-scripting/src/ubios/backups/get_last_console_backup.py
5 4 * * 0 . "$HOME"/.env-crontab; cronic find "$UNIFI_BACKUP_LOCATION" -mtime +90 -delete

# Laravel
* * * * * docker exec golf-rocket-golf-rocket-1 sh -c "php artisan schedule:run"